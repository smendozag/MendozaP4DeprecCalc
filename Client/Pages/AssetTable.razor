

@if (aTable.Assets.Any())
{
    <h3>@Title</h3>

    @foreach(var (val, pos) in AssetValues)//Assets.Select((id , pos) => (Form.GetValues(id), pos)))
    {

        <ValueItem value="@val"
                   ButtonTitle="Remove"
                   ButtonClass="btn btn-danger"
                   Selected="@(async (_)
                   => await Selected.InvokeAsync(pos))"/>
    }

    <div class="row">
        <div class="col"> Result</div>
        <div class="col"> @Result</div>
        <div class="col"> </div>
    </div>  
}


@code {

    [Parameter] public string Title { get; set; }

    [Parameter] public AssetsTable aTable { get; set; }

    [Parameter] public EventCallback<int> Selected { get; set; }

    [Parameter] public decimal Result { get; set; }

    [Parameter] public Func<int, Values> getValuesFromId { get; set; }

    public IEnumerable<( Values val, int pos)> AssetValues { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();


        AssetValues = aTable.Assets.Select((id, pos)
            => (pizza: getValuesFromId(id), pos: pos));


        //Result = AssetValues.Select(tuple => tuple.val.Result).Sum();

    }
    public void setAsset()
    {
        Console.WriteLine("Asset has been added");
    }

}
